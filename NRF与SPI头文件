#ifndef __NRF_H_
#define __NRF_H_

#define uchar unsigned char
#define uint unsigned int

// NRF24L01端口定义
sbit RF_CE = P3^4;
sbit RF_CSN = P1^4;
sbit RF_SCK = P1^7;
sbit RF_MOSI = P1^5;
sbit RF_MISO = P1^6;
sbit RF_IRQ = P3^3;
//////////////////////////////////////////////////////////////
// SPI(nRF24L01) 相关常量定义
#define TX_ADR_WIDTH   5  // 5字节宽度的发送/接收地址
#define RX_ADR_WIDTH   5  // 数据通道有效数据宽度
#define TX_PLOAD_WIDTH 8 // 20字节的有效数据写
#define RX_PLOAD_WIDTH 8 // 20字节的有效数据读
#define READ_REG    0x00  // 读寄存器指令
#define WRITE_REG   0x20  // 写寄存器指令
#define RD_RX_PLOAD 0x61  // 读取接收数据指令
#define WR_TX_PLOAD 0xA0  // 写代发数据指令
#define FLUSH_TX    0xE1  // 冲洗发送 FIFO 指令
#define FLUSH_RX    0xE2  // 冲洗接收 FIFO 指令
#define REUSE_TX_PL 0xE3  // 定义重复装载数据指令
#define NOP         0xFF  //  保留

// SPI(nRF24L01) 寄存器地址宏定义
#define CONFIG      0x00  // 配置收发状态，CRC校验模式以及收发状态响应模式
#define EN_AA       0x01  // 自动应答功能设置
#define EN_RXADDR   0x02  // 可用信道设置
#define SETUP_AW    0x03  // 收发地址宽度设置
#define SETUP_RETR  0x04  // 自动重发功能设置
#define RF_CH       0x05  // 工作频率设置
#define RF_SETUP    0x06  // 发射速率，功耗功能设置
#define STATUS      0x07  // 状态寄存器
#define OBSERVE_TX  0x08  // 发送检测功能
#define CD          0x09  // 地址检测
#define RX_ADDR_P0  0x0A  // 频道0接收数据地址
#define RX_ADDR_P1  0x0B  // 频道1接收数据地址
#define RX_ADDR_P2  0x0C  // 频道2接收数据地址
#define RX_ADDR_P3  0x0D  // 频道3接收数据地址
#define RX_ADDR_P4  0x0E  // 频道4接收数据地址
#define RX_ADDR_P5  0x0F  // 频道5接收数据地址
#define TX_ADDR     0x10  // 发送地址寄存器
#define RX_PW_P0    0x11  // 接收频道0接收数据长度
#define RX_PW_P1    0x12  // 接收频道1接收数据长度
#define RX_PW_P2    0x13  // 接收频道2接收数据长度
#define RX_PW_P3    0x14  // 接收频道3接收数据长度
#define RX_PW_P4    0x15  // 接收频道4接收数据长度
#define RX_PW_P5    0x16  // 接收频道5接收数据长度
#define FIFO_STATUS 0x17  // FIFO栈入栈出的状态寄存器设置
#define STA_MARK_RX 0x40  
#define STA_MARK_TX 0x20  
#define STA_MARK_MX 0x10  
#define WR_TX_PLOAD	0xA0  
#define FLUSE_TX    0xE1  
#define FLUSE_RX    0xE2  

int *uchartostr(int num);
/*******NRF2402的SPI 写时序*******/
int SPI_RW(int uuchar);
/*****NRF2402的SPI 读取一个字节时序****/
int SPI_Read(int reg);
/*****NRF2402写一个字节到寄存器函数*****/
int SPI_RW_reg(int reg,int value);
/***读数据函数，reg：为寄存器地址，pBuf为待读出数据地址，uchars读出数据的个数***/
int SPI_Read_Buf(int reg,int *pBuf,int uchars);
/*用于写数据的函数 reg：为寄存器地址，pBUF:为待写入数据地址，uchars：写入数据的个数*/
int SPI_Write_Buf(int reg,int *pBuf,int uchars);
/*******NRF24L01初始化********/
void INIT_NRF();
/******发送TX_BUF中的数据*********/
void NRF24L02_Txpacket(int *tx_buf);

#endif
